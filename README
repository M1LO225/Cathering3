üçΩÔ∏è CateringCRUD: Gesti√≥n de Usuarios para App de Comida Estudiantil
üöÄ Acerca del Proyecto
CateringCRUD es una aplicaci√≥n web full-stack dise√±ada para la administraci√≥n de usuarios (Create, Read, Update, Delete) de una plataforma de pedidos de comida dirigida a estudiantes. El proyecto simula el panel de administraci√≥n central donde el personal autorizado puede gestionar las cuentas de usuario de manera segura y eficiente.

Este proyecto se desarroll√≥ para demostrar:

Autenticaci√≥n segura (Login/Logout) usando JWT (JSON Web Tokens).

Implementaci√≥n de Rutas Protegidas con React Router v6.

Desarrollo de un CRUD completo en el frontend.

Un dise√±o acogedor y usable con una paleta de colores inspirada en una cafeter√≠a (caf√©s, amarillos y beige).

üé® Dise√±o y Paleta de Colores
El dise√±o busca ser amigable y c√°lido, ideal para un servicio enfocado en la comunidad estudiantil.

Nombre	C√≥digo Hex	Uso Principal
Amarillo Primario	#FFCC33	Resaltados, Botones de √âxito, Hovers.
Marr√≥n Caf√©	#8B4513	Navbar, Encabezados de Tabla, Fondo de Botones Principales.
Blanco Crema	#FAF8F5	Fondo principal de la aplicaci√≥n.
Blanco Puro	#FFFFFF	Superficie de Tarjetas y Formularios.

Exportar a Hojas de c√°lculo
üõ†Ô∏è Tecnolog√≠as Utilizadas
Este proyecto utiliza una arquitectura de dos partes (Frontend/Backend).

Frontend
React: Biblioteca principal para la interfaz de usuario.

Vite: Herramienta de construcci√≥n r√°pida y ligera.

React Router v6: Gesti√≥n de rutas y navegaci√≥n, incluyendo rutas anidadas y protegidas.

CSS Puro: Estilos modulares y variables CSS para el dise√±o.

Custom Hooks (useAuth): Manejo centralizado del estado de autenticaci√≥n.

Backend (Asumido)
(Actualiza esta secci√≥n con tu tecnolog√≠a de backend real, por ejemplo, Node.js, Python, etc.)

Node.js / Express: Servidor API REST.

JWT: Para autenticaci√≥n.

Base de datos: PostgreSQL / MongoDB.

‚öôÔ∏è Instalaci√≥n
Sigue estos pasos para levantar el proyecto localmente.

1. Clonar el Repositorio
Bash

git clone
cd CateringCRUD
2. Configurar el Backend (Asumido)
(A√±ade aqu√≠ los pasos para tu backend si aplica, ej.:)

Bash

# Navegar al directorio del backend
cd backend
npm install
# Configurar variables de entorno (.env)
npm start 
3. Configurar el Frontend
Bash

# Navegar al directorio del frontend
cd frontend
npm install
npm run dev
El frontend se ejecutar√° en http://localhost:5173 (o el puerto que te asigne Vite).

üìñ Uso
Flujo de la Aplicaci√≥n
Inicio: Al cargar la aplicaci√≥n, el usuario puede ver la p√°gina de bienvenida. Los enlaces a Dashboard y Manage Users estar√°n ocultos.

Registro / Login: El usuario debe usar los formularios de Login o Register para obtener un token de autenticaci√≥n.

Rutas Protegidas: Una vez autenticado, el token se guarda y el usuario puede acceder a:

/dashboard

/manage-users (Donde reside la funcionalidad CRUD).

CRUD de Usuarios: En la p√°gina de Manage Users, los usuarios autorizados pueden:

Crear nuevos usuarios (Formulario de Creaci√≥n).

Ver el listado completo (Tabla).

Editar usuarios existentes (Formulario en l√≠nea).

Eliminar usuarios.
